---
import SectionTitle from '../components/SectionTitle.astro'
import Text from '../components/Text.astro'
import { projects } from '../projects.json'
import Project from '../components/Project.astro'
import { languages } from '../i18n/ui'
import { getLangFromUrl, useTranslations } from '../i18n/utils'
import GithubIcon from './Icons/GithubIcon.astro'
import LinkedInIcon from './Icons/LinkedInIcon.astro'
import MailIcon from './Icons/MailIcon.astro'
import SunIcon from './Icons/SunIcon.astro'
import MoonIcon from './Icons/MoonIcon.astro'

const { currentLocale } = Astro
const t = useTranslations(getLangFromUrl(Astro.url))

---

<html lang={currentLocale} class="scroll-smooth">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>Mateo Ledesma - Software Developer</title>
  </head>
  <body class="dark:bg-customBlack dark:text-white text-neutral-900">
    <header class="container mx-auto py-2.5">
      <div class="flex justify-between items-center flex-wrap gap-y-4 gap-x-4">
        <div>
          <h1 class="text-2xl font-bold">Mateo Ledesma <span class="underscore-anim">_</span></h1>
          <h2 class="dark:text-gray-400 italic font-bold">Software Developer</h2>
        </div>
        <div class="flex gap-x-6">
          {
              <a href="https://github.com/mateo-14" class="hover:scale-125 hover:transition" target="_blank" title="GitHub">
                <GithubIcon/>
              </a>
                <a href="https://linkedin.com/in/mateo-ledesma" class="hover:scale-125 hover:transition" target="_blank" title="LinkedIn">
                <LinkedInIcon/>
              </a>
                <a href="mailto:mateo.14.ledesma@gmail.com" class="hover:scale-125 hover:transition" title={t('nav.contact')}>
                <MailIcon/>
              </a>
            
          }
          <button
            id="toggle-theme"
            class="hover:scale-125 hover:transition relative w-6 h-6"
            title={t('theme.change')}
            type="button"
          >
            <SunIcon className="sun absolute top-0" />
            <MoonIcon className="moon absolute top-0" />
          </button>
          <a
            class="font-bold"
            href={`/${Object.keys(languages).filter((lang) => lang !== currentLocale)[0]}`}
            title={t('lang.change')}
          >
            {
              Object.keys(languages)
                .filter((lang) => lang !== currentLocale)[0]
                .toUpperCase()
            }
          </a>
        </div>
      </div>

      <div class="font-bold flex items-center mt-2.5 text-lg gap-x-1.5">
        <span class="hidden md:inline">
          {'>'}
        </span>
        <nav class="flex gap-x-3 flex-wrap">
          <a href="#about" class="hover:opacity-70 hover:transition py-1.5 px-1.5">{t('nav.about')}</a>
          <a href="#projects" class="hover:opacity-70 hover:transition py-1.5 px-1.5">{t('nav.projects')}</a>
          <a href="#github" class="hover:opacity-70 hover:transition py-1.5 px-1.5">GitHub Repos</a>
          <a href={t('resume-file')} class="hover:opacity-70 hover:transition py-1.5 px-1.5">{t('nav.resume')}</a>
        </nav>
      </div>
    </header>
    <main class="container mx-auto grid gap-y-12 mt-10 dark:text-gray-300">
      <section id="about" class="scroll-m-5">
        <SectionTitle>{t('nav.about')} üßëüèª‚Äçüíª</SectionTitle>
        <Text>{t('about.1')}</Text>
        <Text>{t('about.2')}</Text>
        <Text>
          {t('about.cv')}
          {' '}
          <a class="font-bold dark:text-white underline" href={t('resume-file')}>{t('about.clickHere')}</a>.
        </Text>
      </section>

      <section id="projects" class="scroll-m-5">
        <SectionTitle>{t('nav.projects')} üìÇ</SectionTitle>
        <div class="space-y-7">
          {projects.map((project) => <Project project={project} />)}
        </div>
      </section>
    </main>
    <footer class="mt-14 py-8 flex justify-center items-center gap-x-5 text-lg">
      <a class="hover:opacity-70 hover:transition" href="https://github.com/mateo-14" target="_blank">
        GitHub
      </a>
      <a class="hover:opacity-70 hover:transition" href="https://linkedin.com/in/mateo-ledesma" target="_blank">
        LinkedIn
      </a>
      <a class="hover:opacity-70 hover:transition" href="mailto:mateo.14.ledesma@gmail.com">
        {t('nav.contact')}
      </a>
      <a
        class="hover:opacity-70 hover:transition"
        href={`/${Object.keys(languages).filter((lang) => lang !== currentLocale)[0]}`}
        title={t('lang.change')}
      >
        {Object.entries(languages).filter(([code, lang]) => code !== currentLocale)[0][1]}
      </a>
    </footer>
  </body>
</html>

<style>
  @font-face {
    font-family: 'Lato';
    src: url('/fonts/Lato-Regular.ttf');
    font-weight: normal;
    font-style: normal;
    font-display: swap;
  }

  @font-face {
    font-family: 'Lato';
    src: url('/fonts/Lato-Italic.ttf');
    font-weight: normal;
    font-style: italic;
    font-display: swap;
  }

  @font-face {
    font-family: 'Lato';
    src: url('/fonts/Lato-Bold.ttf');
    font-weight: bold;
    font-style: normal;
    font-display: swap;
  }

  @font-face {
    font-family: 'Lato';
    src: url('/fonts/Lato-BoldItalic.ttf');
    font-weight: bold;
    font-style: italic;
    font-display: swap;
  }
</style>

<style is:global>
  .dark-mode-fade-in {
    animation: dark-mode-fade-in 0.4s ease-in-out;
    animation-fill-mode: forwards;
  }

  .dark-mode-fade-out {
    animation: dark-mode-fade-out 0.4s ease-in-out;
    animation-fill-mode: forwards;
  }
  @keyframes dark-mode-fade-in {
    from {
      transform: translateY(-15px);
      opacity: 0;
    }
    to {
      transform: translateY(0);
      opacity: 1;
    }
  }

  @keyframes dark-mode-fade-out {
    from {
      transform: translateY(0);
      opacity: 1;
    }
    to {
      transform: translateY(15px);
      opacity: 0;
    }
  }

  .underscore-anim {
    animation: underscore-anim steps(2, start) 1s infinite;
  }

  @keyframes underscore-anim {
    to {
      visibility: hidden;
    }
  }
</style>

<script>
  const toggleThemeBtn = document.getElementById('toggle-theme')
  const sun = toggleThemeBtn?.querySelector('.sun')
  const moon = toggleThemeBtn?.querySelector('.moon')

  if (
    localStorage.theme === 'dark' ||
    (!('theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)
  ) {
    document.documentElement.classList.add('dark')
    sun?.classList.add('hidden')
  } else {
    moon?.classList.add('hidden')
    document.documentElement.classList.remove('dark')
  }

  toggleThemeBtn?.addEventListener('click', () => {
    document.documentElement.classList.toggle('dark')

    if (document.documentElement.classList.contains('dark')) {
      moon?.classList.remove('hidden', 'dark-mode-fade-out')
      moon?.classList.add('dark-mode-fade-in')
      sun?.classList.remove('dark-mode-fade-in')
      sun?.classList.add('dark-mode-fade-out')
      localStorage.setItem('theme', 'dark')
    } else {
      sun?.classList.remove('hidden', 'dark-mode-fade-out')
      sun?.classList.add('dark-mode-fade-in')
      moon?.classList.remove('dark-mode-fade-in')
      moon?.classList.add('dark-mode-fade-out')
      localStorage.setItem('theme', 'light')
    }
  })
</script>
